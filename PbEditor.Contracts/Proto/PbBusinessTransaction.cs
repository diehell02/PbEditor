// Generated by protoc-gen-cs, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace BonreePB {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PbBusinessTransaction {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_BonreePB_BusinessTransaction__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::BonreePB.BusinessTransaction, global::BonreePB.BusinessTransaction.Builder> internal__static_BonreePB_BusinessTransaction__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PbBusinessTransaction() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxwYl9idXNpbmVzc1RyYW5zYWN0aW9uLnByb3RvEghCb25yZWVQQiJlChNC", 
            "dXNpbmVzc1RyYW5zYWN0aW9uEgoKAmlkGAEgASgNEgwKBG5hbWUYAiABKAkS", 
            "HgoEdHlwZRgDIAEoDjIQLkJvbnJlZVBCLkJUVHlwZRIUCgxpbnRlcm5hbE5h", 
            "bWUYBCABKAkq+gMKBkJUVHlwZRIPCgtCVF9KQVZBX0VKQhABEhAKDEJUX0pB", 
            "VkFfUE9KTxACEhMKD0JUX0pBVkFfU0VSVkxFVBADEhcKE0JUX0pBVkFfU1BS", 
            "SU5HX0JFQU4QBBIZChVCVF9KQVZBX1NUUlVUU19BQ1RJT04QBRIXChNCVF9K", 
            "QVZBX1dFQl9TRVJWSUNFEAYSDwoLQlRfSkFWQV9KTVMQBxISCg5CVF9KQVZB", 
            "X1RIUklGVBAIEhgKFEJUX0RPTkVUX0FTUF9ET1RfTkVUEDISEAoMQlRfRE9O", 
            "RVRfV0NGEDMSGAoUQlRfRE9ORVRfV0VCX1NFUlZJQ0UQNBIbChdCVF9ET05F", 
            "VF9NRVNTQUdFX1FVRVVFUxA1EhkKFUJUX0RPTkVUX0NMQVNTX01FVEhPRBA2", 
            "Eg4KCkJUX1BIUF9DTEkQZBIOCgpCVF9QSFBfV0VCEGUSDgoKQlRfUEhQX01W", 
            "QxBmEhYKEkJUX1BIUF9XRUJfU0VSVklDRRBnEhIKDUJUX05PREVKU19XRUIQ", 
            "lgESEgoNQlRfUFlUSE9OX0NMSRDIARISCg1CVF9QWVRIT05fV0VCEMkBEhMK", 
            "DkJUX1BZVEhPTl9XU0dJEMoBEhYKEUJUX1BZVEhPTl9UT1JOQURPEMsBEhcK", 
            "EkJUX0JBQ0tHUk9VTkRfVEFTSxCsAkIZChdjb20uYm9ucmVlLnByb3RvYnVm", 
            "LmFwbUqMDAoGEgQAACUBCggKAQISAwAIEAoICgEIEgMBADAKCwoECOcHABID", 
            "AQAwCgwKBQjnBwACEgMBBxMKDQoGCOcHAAIAEgMBBxMKDgoHCOcHAAIAARID", 
            "AQcTCgwKBQjnBwAHEgMBFi8KGQoCBQASBAUAHgEaDeS4muWKoeexu+WeiwoK", 
            "CgoDBQABEgMFBQsKCwoEBQACABIDBgQiCgwKBQUAAgABEgMGBA8KDAoFBQAC", 
            "AAISAwYgIQoLCgQFAAIBEgMHBCIKDAoFBQACAQESAwcEEAoMCgUFAAIBAhID", 
            "ByAhCgsKBAUAAgISAwgEIgoMCgUFAAICARIDCAQTCgwKBQUAAgICEgMIICEK", 
            "CwoEBQACAxIDCQQiCgwKBQUAAgMBEgMJBBcKDAoFBQACAwISAwkgIQoLCgQF", 
            "AAIEEgMKBCIKDAoFBQACBAESAwoEGQoMCgUFAAIEAhIDCiAhCgsKBAUAAgUS", 
            "AwsEIgoMCgUFAAIFARIDCwQXCgwKBQUAAgUCEgMLICEKCwoEBQACBhIDDAQi", 
            "CgwKBQUAAgYBEgMMBA8KDAoFBQACBgISAwwgIQoLCgQFAAIHEgMNBCIKDAoF", 
            "BQACBwESAw0EEgoMCgUFAAIHAhIDDSAhCgsKBAUAAggSAw4EIwoMCgUFAAII", 
            "ARIDDgQYCgwKBQUAAggCEgMOICIKCwoEBQACCRIDDwQjCgwKBQUAAgkBEgMP", 
            "BBAKDAoFBQACCQISAw8gIgoLCgQFAAIKEgMQBCMKDAoFBQACCgESAxAEGAoM", 
            "CgUFAAIKAhIDECAiCgsKBAUAAgsSAxEEIwoMCgUFAAILARIDEQQbCgwKBQUA", 
            "AgsCEgMRICIKCwoEBQACDBIDEgQjCgwKBQUAAgwBEgMSBBkKDAoFBQACDAIS", 
            "AxIgIgoLCgQFAAINEgMTBCQKDAoFBQACDQESAxMEDgoMCgUFAAINAhIDEyAj", 
            "CgsKBAUAAg4SAxQEJAoMCgUFAAIOARIDFAQOCgwKBQUAAg4CEgMUICMKCwoE", 
            "BQACDxIDFQQkCgwKBQUAAg8BEgMVBA4KDAoFBQACDwISAxUgIwoLCgQFAAIQ", 
            "EgMWBCQKDAoFBQACEAESAxYEFgoMCgUFAAIQAhIDFiAjCgsKBAUAAhESAxcE", 
            "JAoMCgUFAAIRARIDFwQRCgwKBQUAAhECEgMXICMKCwoEBQACEhIDGAQkCgwK", 
            "BQUAAhIBEgMYBBEKDAoFBQACEgISAxggIwoLCgQFAAITEgMZBCQKDAoFBQAC", 
            "EwESAxkEEQoMCgUFAAITAhIDGSAjCgsKBAUAAhQSAxoEJAoMCgUFAAIUARID", 
            "GgQSCgwKBQUAAhQCEgMaICMKCwoEBQACFRIDGwQkCgwKBQUAAhUBEgMbBBUK", 
            "DAoFBQACFQISAxsgIwoLCgQFAAIWEgMcBCQKDAoFBQACFgESAxwEFgoMCgUF", 
            "AAIWAhIDHCAjChMKAgQAEgQgACUBGgfkuJrliqEKCgoKAwQAARIDIAgbClUK", 
            "BAQAAgASAyEENiJI5Lia5YqhaWTvvIxhZ2VudOS4iuaKpeeahOaXtuWAmeS4", 
            "uuepuu+8jCDnlLFjb250cm9sbGVy55Sf5oiQaWTlubbotYvlgLwKCgwKBQQA", 
            "AgAEEgMhBAwKDAoFBAACAAUSAyENEwoMCgUEAAIAARIDIRQWCgwKBQQAAgAD", 
            "EgMhNDUKFAoEBAACARIDIgQ2IgfliKvlkI0KCgwKBQQAAgEEEgMiBAwKDAoF", 
            "BAACAQUSAyINEwoMCgUEAAIBARIDIhQYCgwKBQQAAgEDEgMiNDUKGgoEBAAC", 
            "AhIDIwQ2Ig3nsbvliKvnsbvliKsKCgwKBQQAAgIEEgMjBAwKDAoFBAACAgYS", 
            "AyMNEwoMCgUEAAICARIDIxQYCgwKBQQAAgIDEgMjNDUKRgoEBAACAxIDJAQ2", 
            "IjnlhoXpg6jlkI3np7DvvIzmr5TlpoJUb3BpY19saXN0Lmxpc3QsL0ZvcnVt", 
            "L2luZGV4LmpzcOetiQoKDAoFBAACAwQSAyQEDAoMCgUEAAIDBRIDJA0TCgwK", 
          "BQQAAgMBEgMkFCAKDAoFBAACAwMSAyQ0NQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_BonreePB_BusinessTransaction__Descriptor = Descriptor.MessageTypes[0];
        internal__static_BonreePB_BusinessTransaction__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::BonreePB.BusinessTransaction, global::BonreePB.BusinessTransaction.Builder>(internal__static_BonreePB_BusinessTransaction__Descriptor,
                new string[] { "Id", "Name", "Type", "InternalName", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum BTType {
    BT_JAVA_EJB = 1,
    BT_JAVA_POJO = 2,
    BT_JAVA_SERVLET = 3,
    BT_JAVA_SPRING_BEAN = 4,
    BT_JAVA_STRUTS_ACTION = 5,
    BT_JAVA_WEB_SERVICE = 6,
    BT_JAVA_JMS = 7,
    BT_JAVA_THRIFT = 8,
    BT_DONET_ASP_DOT_NET = 50,
    BT_DONET_WCF = 51,
    BT_DONET_WEB_SERVICE = 52,
    BT_DONET_MESSAGE_QUEUES = 53,
    BT_DONET_CLASS_METHOD = 54,
    BT_PHP_CLI = 100,
    BT_PHP_WEB = 101,
    BT_PHP_MVC = 102,
    BT_PHP_WEB_SERVICE = 103,
    BT_NODEJS_WEB = 150,
    BT_PYTHON_CLI = 200,
    BT_PYTHON_WEB = 201,
    BT_PYTHON_WSGI = 202,
    BT_PYTHON_TORNADO = 203,
    BT_BACKGROUND_TASK = 300,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BusinessTransaction : pb::GeneratedMessage<BusinessTransaction, BusinessTransaction.Builder> {
    private BusinessTransaction() { }
    private static readonly BusinessTransaction defaultInstance = new BusinessTransaction().MakeReadOnly();
    private static readonly string[] _businessTransactionFieldNames = new string[] { "id", "internalName", "name", "type" };
    private static readonly uint[] _businessTransactionFieldTags = new uint[] { 8, 34, 18, 24 };
    public static BusinessTransaction DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BusinessTransaction DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BusinessTransaction ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::BonreePB.PbBusinessTransaction.internal__static_BonreePB_BusinessTransaction__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BusinessTransaction, BusinessTransaction.Builder> InternalFieldAccessors {
      get { return global::BonreePB.PbBusinessTransaction.internal__static_BonreePB_BusinessTransaction__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private global::BonreePB.BTType type_ = global::BonreePB.BTType.BT_JAVA_EJB;
    public bool HasType {
      get { return hasType; }
    }
    public global::BonreePB.BTType Type {
      get { return type_; }
    }
    
    public const int InternalNameFieldNumber = 4;
    private bool hasInternalName;
    private string internalName_ = "";
    public bool HasInternalName {
      get { return hasInternalName; }
    }
    public string InternalName {
      get { return internalName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _businessTransactionFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[0], Id);
      }
      if (hasName) {
        output.WriteString(2, field_names[2], Name);
      }
      if (hasType) {
        output.WriteEnum(3, field_names[3], (int) Type, Type);
      }
      if (hasInternalName) {
        output.WriteString(4, field_names[1], InternalName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Type);
      }
      if (hasInternalName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, InternalName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BusinessTransaction ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BusinessTransaction ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BusinessTransaction ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BusinessTransaction ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BusinessTransaction MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BusinessTransaction prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BusinessTransaction, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BusinessTransaction cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BusinessTransaction result;
      
      private BusinessTransaction PrepareBuilder() {
        if (resultIsReadOnly) {
          BusinessTransaction original = result;
          result = new BusinessTransaction();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BusinessTransaction MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::BonreePB.BusinessTransaction.Descriptor; }
      }
      
      public override BusinessTransaction DefaultInstanceForType {
        get { return global::BonreePB.BusinessTransaction.DefaultInstance; }
      }
      
      public override BusinessTransaction BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BusinessTransaction) {
          return MergeFrom((BusinessTransaction) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BusinessTransaction other) {
        if (other == global::BonreePB.BusinessTransaction.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasInternalName) {
          InternalName = other.InternalName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_businessTransactionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _businessTransactionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              result.hasInternalName = input.ReadString(ref result.internalName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::BonreePB.BTType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::BonreePB.BTType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::BonreePB.BTType.BT_JAVA_EJB;
        return this;
      }
      
      public bool HasInternalName {
        get { return result.hasInternalName; }
      }
      public string InternalName {
        get { return result.InternalName; }
        set { SetInternalName(value); }
      }
      public Builder SetInternalName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInternalName = true;
        result.internalName_ = value;
        return this;
      }
      public Builder ClearInternalName() {
        PrepareBuilder();
        result.hasInternalName = false;
        result.internalName_ = "";
        return this;
      }
    }
    static BusinessTransaction() {
      object.ReferenceEquals(global::BonreePB.PbBusinessTransaction.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
