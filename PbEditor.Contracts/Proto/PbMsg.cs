// Generated by protoc-gen-cs, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace BonreePB {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PbMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_BonreePB_Msg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::BonreePB.Msg, global::BonreePB.Msg.Builder> internal__static_BonreePB_Msg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_BonreePB_ProcessResultResp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::BonreePB.ProcessResultResp, global::BonreePB.ProcessResultResp.Builder> internal__static_BonreePB_ProcessResultResp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PbMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxwYl9tc2cucHJvdG8SCEJvbnJlZVBCIrMBCgNNc2cSDwoHdmVyc2lvbhgB", 
            "IAIoDRILCgNzZXEYAiACKA0SDgoGbXNnTGVuGAMgAigNEgsKA2NyYxgEIAIo", 
            "DRITCgtlbmNyeXB0VHlwZRgFIAIoDRIUCgxjb21wcmVzc1R5cGUYBiACKA0S", 
            "EQoJdGltZVN0YW1wGAcgAigEEiIKB21zZ1R5cGUYCCACKA4yES5Cb25yZWVQ", 
            "Qi5Nc2dUeXBlEg8KB21zZ0JvZHkYCSACKAwiNAoRUHJvY2Vzc1Jlc3VsdFJl", 
            "c3ASDgoGc3RhdHVzGAEgASgFEg8KB21lc3NhZ2UYAiABKAkqvAMKB01zZ1R5", 
            "cGUSEQoNTVRfQ09OR0lGX1JFURABEhIKDk1UX0NPTkZJR19SRVNQEAISFgoS", 
            "TVRfREFUQV9FUlJPUlNfUkVREAMSFgoSTVRfREFUQV9FVkVOVFNfUkVREAQS", 
            "HAoYTVRfREFUQV9TTE9XX0JBQ0tFTkRfUkVREAUSGAoUTVRfREFUQV9TTkFQ", 
            "U0hPVF9SRVEQBhIWChJNVF9EQVRBX01FVFJJQ19SRVEQBxIaChZNVF9QUk9D", 
            "RVNTX1JFU1VMVF9SRVNQEAgSGAoUTVRfREFUQV9BR0VOVExPR19SRVEQCRIW", 
            "ChJNVF9EQVRBX01FVEhPRF9SRVEQChIaChZNVF9EQVRBX1RIUkVBRERVTVBf", 
            "UkVREAsSFwoTTVRfVEVTVF9DT05ORUNUX1JFURAMEhgKFE1UX1RFU1RfQ09O", 
            "TkVDVF9SRVNQEA0SIgoeTVRfREFUQV9BR0dSRUdBVE9SX0JUREFUQVNfUkVR", 
            "EA4SFwoTTVRfUFJPWFlfQlREQVRBX1JFURBkEhYKEk1UX1BST1hZX0VSUk9S", 
            "X1JFURBlEhgKFE1UX1BST1hZX0JUREFUQV9SRVNQEGYqPgoLRW5jcnlwdFR5", 
            "cGUSCwoHRVRfTk9ORRAAEgoKBkVUX0RFUxABEgoKBkVUX0FFUxACEgoKBkVU", 
            "X1JTQRADKjgKDENvbXByZXNzVHlwZRILCgdDVF9OT05FEAASCwoHQ1RfR1pJ", 
            "UBABEg4KCkNUX0RFRkxBVEUQAirCAQoPQVBNX01TR19WRVJTSU9OEhsKFkFQ", 
            "TV9QUk9UT19WRVJTSU9OX3YxXzEQgQISGwoWQVBNX1BST1RPX1ZFUlNJT05f", 
            "djJfMBCABBIbChZBUE1fUFJPVE9fVkVSU0lPTl92Ml8xEIEEEhsKFkFQTV9Q", 
            "Uk9UT19WRVJTSU9OX3YzXzAQgAYSGwoWQVBNX1BST1RPX1ZFUlNJT05fdjNf", 
            "MhCCBhIeChlBUE1fUFJPVE9fVkVSU0lPTl9DVVJSRU5UEIMGQhkKF2NvbS5i", 
            "b25yZWUucHJvdG9idWYuYXBtSpAbCgYSBAAARgEKCAoBAhIDAAgQCggKAQgS", 
            "AwEAMAoLCgQI5wcAEgMBADAKDAoFCOcHAAISAwEHEwoNCgYI5wcAAgASAwEH", 
            "EwoOCgcI5wcAAgABEgMBBxMKDAoFCOcHAAcSAwEWLwoKCgIFABIEBAAZAQoK", 
            "CgMFAAESAwQFDAo7CgQFAAIAEgMGBCYaH+eUqOS6jmFnZW505ZKMY29udHJv", 
            "bGxlcumAmuS/oQoiDWNvbmZpZ+ivt+axggoKDAoFBQACAAESAwYEEQoMCgUF", 
            "AAIAAhIDBiQlChoKBAUAAgESAwcEJiINY29uZmln5ZON5bqUCgoMCgUFAAIB", 
            "ARIDBwQSCgwKBQUAAgECEgMHJCUKJgoEBQACAhIDCAQmIhnkuIrkvKDplJno", 
            "r6/mlbDmja7or7fmsYIKCgwKBQUAAgIBEgMIBBYKDAoFBQACAgISAwgkJQom", 
            "CgQFAAIDEgMJBCYiGeS4iuS8oOS6i+S7tuaVsOaNruivt+axggoKDAoFBQAC", 
            "AwESAwkEFgoMCgUFAAIDAhIDCSQlCiwKBAUAAgQSAwoEJiIf5LiK5Lyg5pyA", 
            "5oWi5ZCO56uv6LCD55So6K+35rGCCgoMCgUFAAIEARIDCgQcCgwKBQUAAgQC", 
            "EgMKJCUKJgoEBQACBRIDCwQmIhnkuIrkvKDlv6vnhafmlbDmja7or7fmsYIK", 
            "CgwKBQUAAgUBEgMLBBgKDAoFBQACBQISAwskJQomCgQFAAIGEgMMBCYiGeS4", 
            "iuS8oG1ldHJpY+aVsOaNruivt+axggoKDAoFBQACBgESAwwEFgoMCgUFAAIG", 
            "AhIDDCQlCiYKBAUAAgcSAw0EJiIZ5LiK5LygbWV0cmlj5pWw5o2u5ZON5bqU", 
            "CgoMCgUFAAIHARIDDQQaCgwKBQUAAgcCEgMNJCUKKQoEBQACCBIDDgQmIhzk", 
            "uIrkvKBhZ2VudCBsb2fmlbDmja7or7fmsYIKCgwKBQUAAggBEgMOBBgKDAoF", 
            "BQACCAISAw4kJQogCgQFAAIJEgMPBCciE+S4iuS8oOaWueazleaVsOaNrgoK", 
            "DAoFBQACCQESAw8EFgoMCgUFAAIJAhIDDyQmCiYKBAUAAgoSAxAEJyIZ5LiK", 
            "5Lyg57q/56iL5YmW5p6Q5pWw5o2uCgoMCgUFAAIKARIDEAQaCgwKBQUAAgoC", 
            "EgMQJCYKKgoEBQACCxIDEQQnIh3mtYvor5Vjb250cm9sbGVy6L+e5o6l6K+3", 
            "5rGCCgoMCgUFAAILARIDEQQXCgwKBQUAAgsCEgMRJCYKKgoEBQACDBIDEgQn", 
            "Ih3mtYvor5Vjb250cm9sbGVy6L+e5o6l5ZON5bqUCgoMCgUFAAIMARIDEgQY", 
            "CgwKBQUAAgwCEgMSJCYKLAoEBQACDRIDEwQnIh/kuIrkvKDmlbDmja7ono3l", 
            "kIjkuJrliqHmlbDmja4KCgwKBQUAAg0BEgMTBCIKDAoFBQACDQISAxMkJgpf", 
            "CgQFAAIOEgMWBCgaKueUqOS6jnBocOOAgXB5dGhvbuOAgW5vZGVqc+WSjHBy", 
            "b3h56YCa5L+hCiImYWdlbnTkuIrkvKDkuJrliqHnm7jlhbPmlbDmja7liLBw", 
            "cm94eQoKDAoFBQACDgESAxYEFwoMCgUFAAIOAhIDFiQnCi0KBAUAAg8SAxcE", 
            "KCIgYWdlbnTkuIrkvKDplJnor6/mlbDmja7liLBwcm94eQoKDAoFBQACDwES", 
            "AxcEFgoMCgUFAAIPAhIDFyQnCjYKBAUAAhASAxgEKCIpYWdlbnTkvKDkuJrl", 
            "iqHnm7jlhbPmlbDmja7liLBwcm94eeWTjeW6lAoKDAoFBQACEAESAxgEGAoM", 
            "CgUFAAIQAhIDGCQnChkKAgUBEgQcACEBGg3liqDlr4bnsbvlnosKCgoKAwUB", 
            "ARIDHAUQChcKBAUBAgASAx0EDyIK5LiN5Yqg5a+GCgoMCgUFAQIAARIDHQQL", 
            "CgwKBQUBAgACEgMdDQ4KEQoEBQECARIDHgQPIgRkZXMKCgwKBQUBAgEBEgMe", 
            "BAoKDAoFBQECAQISAx4NDgoRCgQFAQICEgMfBA8iBGFlcwoKDAoFBQECAgES", 
            "Ax8ECgoMCgUFAQICAhIDHw0OChEKBAUBAgMSAyAEDyIEcnNhCgoMCgUFAQID", 
            "ARIDIAQKCgwKBQUBAgMCEgMgDQ4KGQoCBQISBCQAKAEaDeWOi+e8qeexu+We", 
            "iwoKCgoDBQIBEgMkBREKFwoEBQICABIDJQQWIgrkuI3ljovnvKkKCgwKBQUC", 
            "AgABEgMlBAsKDAoFBQICAAISAyUUFQoSCgQFAgIBEgMmBBYiBWd6aXAKCgwK", 
            "BQUCAgEBEgMmBAsKDAoFBQICAQISAyYUFQoVCgQFAgICEgMnBBYiCGRlZmxh", 
            "dGUKCgwKBQUCAgIBEgMnBA4KDAoFBQICAgISAycUFQofCgIFAxIEKwAyARoT", 
            "5a6a5LmJ5Y2P6K6u54mI5pysCgoKCgMFAwESAysFFAozCgQFAwIAEgMsBCci", 
            "JuesrOS4gOS4queJiOacrOWNj+iurueJiOacrOWPt+S4unYxLjEKCgwKBQUD", 
            "AgABEgMsBBoKDAoFBQMCAAISAywgJgozCgQFAwIBEgMtBCciJuesrOS4gOS4", 
            "queJiOacrOWNj+iurueJiOacrOWPt+S4unYyLjAKCgwKBQUDAgEBEgMtBBoK", 
            "DAoFBQMCAQISAy0gJgozCgQFAwICEgMuBCciJuesrOS4gOS4queJiOacrOWN", 
            "j+iurueJiOacrOWPt+S4unYyLjEKCgwKBQUDAgIBEgMuBBoKDAoFBQMCAgIS", 
            "Ay4gJgozCgQFAwIDEgMvBCciJuesrOS4gOS4queJiOacrOWNj+iurueJiOac", 
            "rOWPt+S4unYzLjAKCgwKBQUDAgMBEgMvBBoKDAoFBQMCAwISAy8gJgozCgQF", 
            "AwIEEgMwBCciJuesrOS4gOS4queJiOacrOWNj+iurueJiOacrOWPt+S4unYz", 
            "LjIKCgwKBQUDAgQBEgMwBBoKDAoFBQMCBAISAzAgJgozCgQFAwIFEgMxBCci", 
            "JuesrOS4gOS4queJiOacrOWNj+iurueJiOacrOWPt+S4unYzLjMKCgwKBQUD", 
            "AgUBEgMxBB0KDAoFBQMCBQISAzEgJgoiCgIEABIENgBAARoW6YCa5L+h5Y2P", 
            "6K6u5raI5oGv5L2TCgoKCgMEAAESAzYICwoaCgQEAAIAEgM3BCYiDeWNj+iu", 
            "rueJiOacrAoKDAoFBAACAAQSAzcEDAoMCgUEAAIABRIDNw0TCgwKBQQAAgAB", 
            "EgM3FBsKDAoFBAACAAMSAzckJQqIAQoEBAACARIDOAQmIntzZXHluo/liJfl", 
            "j7fvvIznlKjmnaXkv53or4Hmtojmga/kuI3kvJrph43lpI3lpITnkIbvvIwg", 
            "5LuOYWdlbnTlkK/liqjlvIDlp4vorqHmlbAg77yMIOacjeWKoeWZqOe7tOaK", 
            "pOacgOi/keS4gOWwj+aXtuW6j+WPtwoKDAoFBAACAQQSAzgEDAoMCgUEAAIB", 
            "BRIDOA0TCgwKBQQAAgEBEgM4FBcKDAoFBAACAQMSAzgkJQoaCgQEAAICEgM5", 
            "BCYiDea2iOaBr+mVv+W6pgoKDAoFBAACAgQSAzkEDAoMCgUEAAICBRIDOQ0T", 
            "CgwKBQQAAgIBEgM5FBoKDAoFBAACAgMSAzkkJQojCgQEAAIDEgM6BCYiFua2", 
            "iOaBr+S9k2NyY+agoemqjOWAvAoKDAoFBAACAwQSAzoEDAoMCgUEAAIDBRID", 
            "Og0TCgwKBQQAAgMBEgM6FBcKDAoFBAACAwMSAzokJQoaCgQEAAIEEgM7BCYi", 
            "DeWKoOWvhuaWueW8jwoKDAoFBAACBAQSAzsEDAoMCgUEAAIEBRIDOw0TCgwK", 
            "BQQAAgQBEgM7FB8KDAoFBAACBAMSAzskJQoaCgQEAAIFEgM8BCYiDeWOi+e8", 
            "qeaWueW8jwoKDAoFBAACBQQSAzwEDAoMCgUEAAIFBRIDPA0TCgwKBQQAAgUB", 
            "EgM8FCAKDAoFBAACBQMSAzwkJQoXCgQEAAIGEgM9BCYiCuaXtumXtOaIswoK", 
            "DAoFBAACBgQSAz0EDAoMCgUEAAIGBRIDPQ0TCgwKBQQAAgYBEgM9FB0KDAoF", 
            "BAACBgMSAz0kJQoaCgQEAAIHEgM+BCYiDea2iOaBr+exu+WeiwoKDAoFBAAC", 
            "BwQSAz4EDAoMCgUEAAIHBhIDPg0UCgwKBQQAAgcBEgM+FRwKDAoFBAACBwMS", 
            "Az4kJQoXCgQEAAIIEgM/BCYiCua2iOaBr+S9kwoKDAoFBAACCAQSAz8EDAoM", 
            "CgUEAAIIBRIDPw0SCgwKBQQAAggBEgM/FBsKDAoFBAACCAMSAz8kJQofCgIE", 
            "ARIEQwBGARoT5LiK5Lyg6ZSZ6K+v5ZON5bqUCgoKCgMEAQESA0MIGQoaCgQE", 
            "AQIAEgNEBCIiDeWkhOeQhue7k+aenAoKDAoFBAECAAQSA0QEDAoMCgUEAQIA", 
            "BRIDRA0SCgwKBQQBAgABEgNEExkKDAoFBAECAAMSA0QgIQoaCgQEAQIBEgNF", 
            "BCIiDeWkhOeQhuS/oeaBrwoKDAoFBAECAQQSA0UEDAoMCgUEAQIBBRIDRQ0T", 
          "CgwKBQQBAgEBEgNFFBsKDAoFBAECAQMSA0UgIQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_BonreePB_Msg__Descriptor = Descriptor.MessageTypes[0];
        internal__static_BonreePB_Msg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::BonreePB.Msg, global::BonreePB.Msg.Builder>(internal__static_BonreePB_Msg__Descriptor,
                new string[] { "Version", "Seq", "MsgLen", "Crc", "EncryptType", "CompressType", "TimeStamp", "MsgType", "MsgBody", });
        internal__static_BonreePB_ProcessResultResp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_BonreePB_ProcessResultResp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::BonreePB.ProcessResultResp, global::BonreePB.ProcessResultResp.Builder>(internal__static_BonreePB_ProcessResultResp__Descriptor,
                new string[] { "Status", "Message", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum MsgType {
    MT_CONGIF_REQ = 1,
    MT_CONFIG_RESP = 2,
    MT_DATA_ERRORS_REQ = 3,
    MT_DATA_EVENTS_REQ = 4,
    MT_DATA_SLOW_BACKEND_REQ = 5,
    MT_DATA_SNAPSHOT_REQ = 6,
    MT_DATA_METRIC_REQ = 7,
    MT_PROCESS_RESULT_RESP = 8,
    MT_DATA_AGENTLOG_REQ = 9,
    MT_DATA_METHOD_REQ = 10,
    MT_DATA_THREADDUMP_REQ = 11,
    MT_TEST_CONNECT_REQ = 12,
    MT_TEST_CONNECT_RESP = 13,
    MT_DATA_AGGREGATOR_BTDATAS_REQ = 14,
    MT_PROXY_BTDATA_REQ = 100,
    MT_PROXY_ERROR_REQ = 101,
    MT_PROXY_BTDATA_RESP = 102,
  }
  
  public enum EncryptType {
    ET_NONE = 0,
    ET_DES = 1,
    ET_AES = 2,
    ET_RSA = 3,
  }
  
  public enum CompressType {
    CT_NONE = 0,
    CT_GZIP = 1,
    CT_DEFLATE = 2,
  }
  
  public enum APM_MSG_VERSION {
    APM_PROTO_VERSION_v1_1 = 257,
    APM_PROTO_VERSION_v2_0 = 512,
    APM_PROTO_VERSION_v2_1 = 513,
    APM_PROTO_VERSION_v3_0 = 768,
    APM_PROTO_VERSION_v3_2 = 770,
    APM_PROTO_VERSION_CURRENT = 771,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg : pb::GeneratedMessage<Msg, Msg.Builder> {
    private Msg() { }
    private static readonly Msg defaultInstance = new Msg().MakeReadOnly();
    private static readonly string[] _msgFieldNames = new string[] { "compressType", "crc", "encryptType", "msgBody", "msgLen", "msgType", "seq", "timeStamp", "version" };
    private static readonly uint[] _msgFieldTags = new uint[] { 48, 32, 40, 74, 24, 64, 16, 56, 8 };
    public static Msg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::BonreePB.PbMsg.internal__static_BonreePB_Msg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg, Msg.Builder> InternalFieldAccessors {
      get { return global::BonreePB.PbMsg.internal__static_BonreePB_Msg__FieldAccessorTable; }
    }
    
    public const int VersionFieldNumber = 1;
    private bool hasVersion;
    private uint version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint Version {
      get { return version_; }
    }
    
    public const int SeqFieldNumber = 2;
    private bool hasSeq;
    private uint seq_;
    public bool HasSeq {
      get { return hasSeq; }
    }
    [global::System.CLSCompliant(false)]
    public uint Seq {
      get { return seq_; }
    }
    
    public const int MsgLenFieldNumber = 3;
    private bool hasMsgLen;
    private uint msgLen_;
    public bool HasMsgLen {
      get { return hasMsgLen; }
    }
    [global::System.CLSCompliant(false)]
    public uint MsgLen {
      get { return msgLen_; }
    }
    
    public const int CrcFieldNumber = 4;
    private bool hasCrc;
    private uint crc_;
    public bool HasCrc {
      get { return hasCrc; }
    }
    [global::System.CLSCompliant(false)]
    public uint Crc {
      get { return crc_; }
    }
    
    public const int EncryptTypeFieldNumber = 5;
    private bool hasEncryptType;
    private uint encryptType_;
    public bool HasEncryptType {
      get { return hasEncryptType; }
    }
    [global::System.CLSCompliant(false)]
    public uint EncryptType {
      get { return encryptType_; }
    }
    
    public const int CompressTypeFieldNumber = 6;
    private bool hasCompressType;
    private uint compressType_;
    public bool HasCompressType {
      get { return hasCompressType; }
    }
    [global::System.CLSCompliant(false)]
    public uint CompressType {
      get { return compressType_; }
    }
    
    public const int TimeStampFieldNumber = 7;
    private bool hasTimeStamp;
    private ulong timeStamp_;
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int MsgTypeFieldNumber = 8;
    private bool hasMsgType;
    private global::BonreePB.MsgType msgType_ = global::BonreePB.MsgType.MT_CONGIF_REQ;
    public bool HasMsgType {
      get { return hasMsgType; }
    }
    public global::BonreePB.MsgType MsgType {
      get { return msgType_; }
    }
    
    public const int MsgBodyFieldNumber = 9;
    private bool hasMsgBody;
    private pb::ByteString msgBody_ = pb::ByteString.Empty;
    public bool HasMsgBody {
      get { return hasMsgBody; }
    }
    public pb::ByteString MsgBody {
      get { return msgBody_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasVersion) return false;
        if (!hasSeq) return false;
        if (!hasMsgLen) return false;
        if (!hasCrc) return false;
        if (!hasEncryptType) return false;
        if (!hasCompressType) return false;
        if (!hasTimeStamp) return false;
        if (!hasMsgType) return false;
        if (!hasMsgBody) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _msgFieldNames;
      if (hasVersion) {
        output.WriteUInt32(1, field_names[8], Version);
      }
      if (hasSeq) {
        output.WriteUInt32(2, field_names[6], Seq);
      }
      if (hasMsgLen) {
        output.WriteUInt32(3, field_names[4], MsgLen);
      }
      if (hasCrc) {
        output.WriteUInt32(4, field_names[1], Crc);
      }
      if (hasEncryptType) {
        output.WriteUInt32(5, field_names[2], EncryptType);
      }
      if (hasCompressType) {
        output.WriteUInt32(6, field_names[0], CompressType);
      }
      if (hasTimeStamp) {
        output.WriteUInt64(7, field_names[7], TimeStamp);
      }
      if (hasMsgType) {
        output.WriteEnum(8, field_names[5], (int) MsgType, MsgType);
      }
      if (hasMsgBody) {
        output.WriteBytes(9, field_names[3], MsgBody);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Version);
      }
      if (hasSeq) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Seq);
      }
      if (hasMsgLen) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, MsgLen);
      }
      if (hasCrc) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Crc);
      }
      if (hasEncryptType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, EncryptType);
      }
      if (hasCompressType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, CompressType);
      }
      if (hasTimeStamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(7, TimeStamp);
      }
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) MsgType);
      }
      if (hasMsgBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(9, MsgBody);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Msg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg result;
      
      private Msg PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg original = result;
          result = new Msg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::BonreePB.Msg.Descriptor; }
      }
      
      public override Msg DefaultInstanceForType {
        get { return global::BonreePB.Msg.DefaultInstance; }
      }
      
      public override Msg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg) {
          return MergeFrom((Msg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg other) {
        if (other == global::BonreePB.Msg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasSeq) {
          Seq = other.Seq;
        }
        if (other.HasMsgLen) {
          MsgLen = other.MsgLen;
        }
        if (other.HasCrc) {
          Crc = other.Crc;
        }
        if (other.HasEncryptType) {
          EncryptType = other.EncryptType;
        }
        if (other.HasCompressType) {
          CompressType = other.CompressType;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasMsgType) {
          MsgType = other.MsgType;
        }
        if (other.HasMsgBody) {
          MsgBody = other.MsgBody;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasVersion = input.ReadUInt32(ref result.version_);
              break;
            }
            case 16: {
              result.hasSeq = input.ReadUInt32(ref result.seq_);
              break;
            }
            case 24: {
              result.hasMsgLen = input.ReadUInt32(ref result.msgLen_);
              break;
            }
            case 32: {
              result.hasCrc = input.ReadUInt32(ref result.crc_);
              break;
            }
            case 40: {
              result.hasEncryptType = input.ReadUInt32(ref result.encryptType_);
              break;
            }
            case 48: {
              result.hasCompressType = input.ReadUInt32(ref result.compressType_);
              break;
            }
            case 56: {
              result.hasTimeStamp = input.ReadUInt64(ref result.timeStamp_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.msgType_, out unknown)) {
                result.hasMsgType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 74: {
              result.hasMsgBody = input.ReadBytes(ref result.msgBody_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      [global::System.CLSCompliant(false)]
      public uint Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersion(uint value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      public bool HasSeq {
        get { return result.hasSeq; }
      }
      [global::System.CLSCompliant(false)]
      public uint Seq {
        get { return result.Seq; }
        set { SetSeq(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSeq(uint value) {
        PrepareBuilder();
        result.hasSeq = true;
        result.seq_ = value;
        return this;
      }
      public Builder ClearSeq() {
        PrepareBuilder();
        result.hasSeq = false;
        result.seq_ = 0;
        return this;
      }
      
      public bool HasMsgLen {
        get { return result.hasMsgLen; }
      }
      [global::System.CLSCompliant(false)]
      public uint MsgLen {
        get { return result.MsgLen; }
        set { SetMsgLen(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMsgLen(uint value) {
        PrepareBuilder();
        result.hasMsgLen = true;
        result.msgLen_ = value;
        return this;
      }
      public Builder ClearMsgLen() {
        PrepareBuilder();
        result.hasMsgLen = false;
        result.msgLen_ = 0;
        return this;
      }
      
      public bool HasCrc {
        get { return result.hasCrc; }
      }
      [global::System.CLSCompliant(false)]
      public uint Crc {
        get { return result.Crc; }
        set { SetCrc(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCrc(uint value) {
        PrepareBuilder();
        result.hasCrc = true;
        result.crc_ = value;
        return this;
      }
      public Builder ClearCrc() {
        PrepareBuilder();
        result.hasCrc = false;
        result.crc_ = 0;
        return this;
      }
      
      public bool HasEncryptType {
        get { return result.hasEncryptType; }
      }
      [global::System.CLSCompliant(false)]
      public uint EncryptType {
        get { return result.EncryptType; }
        set { SetEncryptType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEncryptType(uint value) {
        PrepareBuilder();
        result.hasEncryptType = true;
        result.encryptType_ = value;
        return this;
      }
      public Builder ClearEncryptType() {
        PrepareBuilder();
        result.hasEncryptType = false;
        result.encryptType_ = 0;
        return this;
      }
      
      public bool HasCompressType {
        get { return result.hasCompressType; }
      }
      [global::System.CLSCompliant(false)]
      public uint CompressType {
        get { return result.CompressType; }
        set { SetCompressType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCompressType(uint value) {
        PrepareBuilder();
        result.hasCompressType = true;
        result.compressType_ = value;
        return this;
      }
      public Builder ClearCompressType() {
        PrepareBuilder();
        result.hasCompressType = false;
        result.compressType_ = 0;
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimeStamp(ulong value) {
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = 0UL;
        return this;
      }
      
      public bool HasMsgType {
       get { return result.hasMsgType; }
      }
      public global::BonreePB.MsgType MsgType {
        get { return result.MsgType; }
        set { SetMsgType(value); }
      }
      public Builder SetMsgType(global::BonreePB.MsgType value) {
        PrepareBuilder();
        result.hasMsgType = true;
        result.msgType_ = value;
        return this;
      }
      public Builder ClearMsgType() {
        PrepareBuilder();
        result.hasMsgType = false;
        result.msgType_ = global::BonreePB.MsgType.MT_CONGIF_REQ;
        return this;
      }
      
      public bool HasMsgBody {
        get { return result.hasMsgBody; }
      }
      public pb::ByteString MsgBody {
        get { return result.MsgBody; }
        set { SetMsgBody(value); }
      }
      public Builder SetMsgBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsgBody = true;
        result.msgBody_ = value;
        return this;
      }
      public Builder ClearMsgBody() {
        PrepareBuilder();
        result.hasMsgBody = false;
        result.msgBody_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Msg() {
      object.ReferenceEquals(global::BonreePB.PbMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProcessResultResp : pb::GeneratedMessage<ProcessResultResp, ProcessResultResp.Builder> {
    private ProcessResultResp() { }
    private static readonly ProcessResultResp defaultInstance = new ProcessResultResp().MakeReadOnly();
    private static readonly string[] _processResultRespFieldNames = new string[] { "message", "status" };
    private static readonly uint[] _processResultRespFieldTags = new uint[] { 18, 8 };
    public static ProcessResultResp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProcessResultResp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProcessResultResp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::BonreePB.PbMsg.internal__static_BonreePB_ProcessResultResp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProcessResultResp, ProcessResultResp.Builder> InternalFieldAccessors {
      get { return global::BonreePB.PbMsg.internal__static_BonreePB_ProcessResultResp__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _processResultRespFieldNames;
      if (hasStatus) {
        output.WriteInt32(1, field_names[1], Status);
      }
      if (hasMessage) {
        output.WriteString(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Status);
      }
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ProcessResultResp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProcessResultResp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProcessResultResp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProcessResultResp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProcessResultResp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProcessResultResp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProcessResultResp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProcessResultResp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProcessResultResp result;
      
      private ProcessResultResp PrepareBuilder() {
        if (resultIsReadOnly) {
          ProcessResultResp original = result;
          result = new ProcessResultResp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProcessResultResp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::BonreePB.ProcessResultResp.Descriptor; }
      }
      
      public override ProcessResultResp DefaultInstanceForType {
        get { return global::BonreePB.ProcessResultResp.DefaultInstance; }
      }
      
      public override ProcessResultResp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProcessResultResp) {
          return MergeFrom((ProcessResultResp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProcessResultResp other) {
        if (other == global::BonreePB.ProcessResultResp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_processResultRespFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _processResultRespFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static ProcessResultResp() {
      object.ReferenceEquals(global::BonreePB.PbMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
