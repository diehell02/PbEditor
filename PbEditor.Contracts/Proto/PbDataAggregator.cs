// Generated by protoc-gen-cs, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace BonreePB {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PbDataAggregator {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_BonreePB_BTDataItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::BonreePB.BTDataItem, global::BonreePB.BTDataItem.Builder> internal__static_BonreePB_BTDataItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_BonreePB_BtDatasReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::BonreePB.BtDatasReq, global::BonreePB.BtDatasReq.Builder> internal__static_BonreePB_BtDatasReq__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PbDataAggregator() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdwYl9kYXRhQWdncmVnYXRvci5wcm90bxIIQm9ucmVlUEIiYgoKQlREYXRh", 
            "SXRlbRITCgtyZXF1ZXN0R3VpZBgBIAEoCRIQCghyZXNwVGltZRgCIAEoDRIU", 
            "CgxiSGFzU25hcHNob3QYAyABKAgSFwoPdHJhbnNhY3Rpb25OYW1lGAQgASgJ", 
            "IkIKCkJ0RGF0YXNSZXESDQoFYXBwSWQYASABKA0SJQoHYnREYXRhcxgCIAMo", 
            "CzIULkJvbnJlZVBCLkJURGF0YUl0ZW1CGQoXY29tLmJvbnJlZS5wcm90b2J1", 
            "Zi5hcG1KsQUKBhIEAAARAQoICgECEgMACBAKCAoBCBIDAQAwCgsKBAjnBwAS", 
            "AwEAMAoMCgUI5wcAAhIDAQcTCg0KBgjnBwACABIDAQcTCg4KBwjnBwACAAES", 
            "AwEHEwoMCgUI5wcABxIDARYvCiMKAgQAEgQGAAsBGhfmr4/kuKpodHRw6K+3", 
            "5rGC6ICX5pe2CgoKCgMEAAESAwYIEgoYCgQEAAIAEgMHBC4iC+ivt+axgmd1", 
            "aWQKCgwKBQQAAgAEEgMHBAwKDAoFBAACAAUSAwcNEwoMCgUEAAIAARIDBxQf", 
            "CgwKBQQAAgADEgMHLC0KGgoEBAACARIDCAQuIg3lk43lupTml7bpl7QKCgwK", 
            "BQQAAgEEEgMIBAwKDAoFBAACAQUSAwgNEwoMCgUEAAIBARIDCBQcCgwKBQQA", 
            "AgEDEgMILC0KIAoEBAACAhIDCQQuIhPmmK/lkKbljIXlkKvlv6vnhacKCgwK", 
            "BQQAAgIEEgMJBAwKDAoFBAACAgUSAwkNEQoMCgUEAAICARIDCRIeCgwKBQQA", 
            "AgIDEgMJLC0KGgoEBAACAxIDCgQuIg3kuJrliqHlkI3np7AKCgwKBQQAAgME", 
            "EgMKBAwKDAoFBAACAwUSAwoNEwoMCgUEAAIDARIDChQjCgwKBQQAAgMDEgMK", 
            "LC0KCgoCBAESBA4AEQEKCgoDBAEBEgMOCBIKFgoEBAECABIDDwQuIgnlupTn", 
            "lKhpZAoKDAoFBAECAAQSAw8EDAoMCgUEAQIABRIDDw0TCgwKBQQBAgABEgMP", 
            "FBkKDAoFBAECAAMSAw8sLQomCgQEAQIBEgMQBC4iGeaJgOacieivt+axguiA", 
            "l+aXtuWIl+ihqAoKDAoFBAECAQQSAxAEDAoMCgUEAQIBBhIDEA0XCgwKBQQB", 
          "AgEBEgMQGB8KDAoFBAECAQMSAxAsLQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_BonreePB_BTDataItem__Descriptor = Descriptor.MessageTypes[0];
        internal__static_BonreePB_BTDataItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::BonreePB.BTDataItem, global::BonreePB.BTDataItem.Builder>(internal__static_BonreePB_BTDataItem__Descriptor,
                new string[] { "RequestGuid", "RespTime", "BHasSnapshot", "TransactionName", });
        internal__static_BonreePB_BtDatasReq__Descriptor = Descriptor.MessageTypes[1];
        internal__static_BonreePB_BtDatasReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::BonreePB.BtDatasReq, global::BonreePB.BtDatasReq.Builder>(internal__static_BonreePB_BtDatasReq__Descriptor,
                new string[] { "AppId", "BtDatas", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BTDataItem : pb::GeneratedMessage<BTDataItem, BTDataItem.Builder> {
    private BTDataItem() { }
    private static readonly BTDataItem defaultInstance = new BTDataItem().MakeReadOnly();
    private static readonly string[] _bTDataItemFieldNames = new string[] { "bHasSnapshot", "requestGuid", "respTime", "transactionName" };
    private static readonly uint[] _bTDataItemFieldTags = new uint[] { 24, 10, 16, 34 };
    public static BTDataItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BTDataItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BTDataItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::BonreePB.PbDataAggregator.internal__static_BonreePB_BTDataItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BTDataItem, BTDataItem.Builder> InternalFieldAccessors {
      get { return global::BonreePB.PbDataAggregator.internal__static_BonreePB_BTDataItem__FieldAccessorTable; }
    }
    
    public const int RequestGuidFieldNumber = 1;
    private bool hasRequestGuid;
    private string requestGuid_ = "";
    public bool HasRequestGuid {
      get { return hasRequestGuid; }
    }
    public string RequestGuid {
      get { return requestGuid_; }
    }
    
    public const int RespTimeFieldNumber = 2;
    private bool hasRespTime;
    private uint respTime_;
    public bool HasRespTime {
      get { return hasRespTime; }
    }
    [global::System.CLSCompliant(false)]
    public uint RespTime {
      get { return respTime_; }
    }
    
    public const int BHasSnapshotFieldNumber = 3;
    private bool hasBHasSnapshot;
    private bool bHasSnapshot_;
    public bool HasBHasSnapshot {
      get { return hasBHasSnapshot; }
    }
    public bool BHasSnapshot {
      get { return bHasSnapshot_; }
    }
    
    public const int TransactionNameFieldNumber = 4;
    private bool hasTransactionName;
    private string transactionName_ = "";
    public bool HasTransactionName {
      get { return hasTransactionName; }
    }
    public string TransactionName {
      get { return transactionName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bTDataItemFieldNames;
      if (hasRequestGuid) {
        output.WriteString(1, field_names[1], RequestGuid);
      }
      if (hasRespTime) {
        output.WriteUInt32(2, field_names[2], RespTime);
      }
      if (hasBHasSnapshot) {
        output.WriteBool(3, field_names[0], BHasSnapshot);
      }
      if (hasTransactionName) {
        output.WriteString(4, field_names[3], TransactionName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestGuid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, RequestGuid);
      }
      if (hasRespTime) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, RespTime);
      }
      if (hasBHasSnapshot) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, BHasSnapshot);
      }
      if (hasTransactionName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, TransactionName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BTDataItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BTDataItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BTDataItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BTDataItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BTDataItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BTDataItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BTDataItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BTDataItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BTDataItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BTDataItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BTDataItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BTDataItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BTDataItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BTDataItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BTDataItem result;
      
      private BTDataItem PrepareBuilder() {
        if (resultIsReadOnly) {
          BTDataItem original = result;
          result = new BTDataItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BTDataItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::BonreePB.BTDataItem.Descriptor; }
      }
      
      public override BTDataItem DefaultInstanceForType {
        get { return global::BonreePB.BTDataItem.DefaultInstance; }
      }
      
      public override BTDataItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BTDataItem) {
          return MergeFrom((BTDataItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BTDataItem other) {
        if (other == global::BonreePB.BTDataItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestGuid) {
          RequestGuid = other.RequestGuid;
        }
        if (other.HasRespTime) {
          RespTime = other.RespTime;
        }
        if (other.HasBHasSnapshot) {
          BHasSnapshot = other.BHasSnapshot;
        }
        if (other.HasTransactionName) {
          TransactionName = other.TransactionName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bTDataItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bTDataItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRequestGuid = input.ReadString(ref result.requestGuid_);
              break;
            }
            case 16: {
              result.hasRespTime = input.ReadUInt32(ref result.respTime_);
              break;
            }
            case 24: {
              result.hasBHasSnapshot = input.ReadBool(ref result.bHasSnapshot_);
              break;
            }
            case 34: {
              result.hasTransactionName = input.ReadString(ref result.transactionName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestGuid {
        get { return result.hasRequestGuid; }
      }
      public string RequestGuid {
        get { return result.RequestGuid; }
        set { SetRequestGuid(value); }
      }
      public Builder SetRequestGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestGuid = true;
        result.requestGuid_ = value;
        return this;
      }
      public Builder ClearRequestGuid() {
        PrepareBuilder();
        result.hasRequestGuid = false;
        result.requestGuid_ = "";
        return this;
      }
      
      public bool HasRespTime {
        get { return result.hasRespTime; }
      }
      [global::System.CLSCompliant(false)]
      public uint RespTime {
        get { return result.RespTime; }
        set { SetRespTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRespTime(uint value) {
        PrepareBuilder();
        result.hasRespTime = true;
        result.respTime_ = value;
        return this;
      }
      public Builder ClearRespTime() {
        PrepareBuilder();
        result.hasRespTime = false;
        result.respTime_ = 0;
        return this;
      }
      
      public bool HasBHasSnapshot {
        get { return result.hasBHasSnapshot; }
      }
      public bool BHasSnapshot {
        get { return result.BHasSnapshot; }
        set { SetBHasSnapshot(value); }
      }
      public Builder SetBHasSnapshot(bool value) {
        PrepareBuilder();
        result.hasBHasSnapshot = true;
        result.bHasSnapshot_ = value;
        return this;
      }
      public Builder ClearBHasSnapshot() {
        PrepareBuilder();
        result.hasBHasSnapshot = false;
        result.bHasSnapshot_ = false;
        return this;
      }
      
      public bool HasTransactionName {
        get { return result.hasTransactionName; }
      }
      public string TransactionName {
        get { return result.TransactionName; }
        set { SetTransactionName(value); }
      }
      public Builder SetTransactionName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionName = true;
        result.transactionName_ = value;
        return this;
      }
      public Builder ClearTransactionName() {
        PrepareBuilder();
        result.hasTransactionName = false;
        result.transactionName_ = "";
        return this;
      }
    }
    static BTDataItem() {
      object.ReferenceEquals(global::BonreePB.PbDataAggregator.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BtDatasReq : pb::GeneratedMessage<BtDatasReq, BtDatasReq.Builder> {
    private BtDatasReq() { }
    private static readonly BtDatasReq defaultInstance = new BtDatasReq().MakeReadOnly();
    private static readonly string[] _btDatasReqFieldNames = new string[] { "appId", "btDatas" };
    private static readonly uint[] _btDatasReqFieldTags = new uint[] { 8, 18 };
    public static BtDatasReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BtDatasReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BtDatasReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::BonreePB.PbDataAggregator.internal__static_BonreePB_BtDatasReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BtDatasReq, BtDatasReq.Builder> InternalFieldAccessors {
      get { return global::BonreePB.PbDataAggregator.internal__static_BonreePB_BtDatasReq__FieldAccessorTable; }
    }
    
    public const int AppIdFieldNumber = 1;
    private bool hasAppId;
    private uint appId_;
    public bool HasAppId {
      get { return hasAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AppId {
      get { return appId_; }
    }
    
    public const int BtDatasFieldNumber = 2;
    private pbc::PopsicleList<global::BonreePB.BTDataItem> btDatas_ = new pbc::PopsicleList<global::BonreePB.BTDataItem>();
    public scg::IList<global::BonreePB.BTDataItem> BtDatasList {
      get { return btDatas_; }
    }
    public int BtDatasCount {
      get { return btDatas_.Count; }
    }
    public global::BonreePB.BTDataItem GetBtDatas(int index) {
      return btDatas_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _btDatasReqFieldNames;
      if (hasAppId) {
        output.WriteUInt32(1, field_names[0], AppId);
      }
      if (btDatas_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], btDatas_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AppId);
      }
      foreach (global::BonreePB.BTDataItem element in BtDatasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BtDatasReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BtDatasReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BtDatasReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BtDatasReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BtDatasReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BtDatasReq MakeReadOnly() {
      btDatas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BtDatasReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BtDatasReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BtDatasReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BtDatasReq result;
      
      private BtDatasReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BtDatasReq original = result;
          result = new BtDatasReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BtDatasReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::BonreePB.BtDatasReq.Descriptor; }
      }
      
      public override BtDatasReq DefaultInstanceForType {
        get { return global::BonreePB.BtDatasReq.DefaultInstance; }
      }
      
      public override BtDatasReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BtDatasReq) {
          return MergeFrom((BtDatasReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BtDatasReq other) {
        if (other == global::BonreePB.BtDatasReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAppId) {
          AppId = other.AppId;
        }
        if (other.btDatas_.Count != 0) {
          result.btDatas_.Add(other.btDatas_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_btDatasReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _btDatasReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAppId = input.ReadUInt32(ref result.appId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.btDatas_, global::BonreePB.BTDataItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAppId {
        get { return result.hasAppId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AppId {
        get { return result.AppId; }
        set { SetAppId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAppId(uint value) {
        PrepareBuilder();
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder ClearAppId() {
        PrepareBuilder();
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::BonreePB.BTDataItem> BtDatasList {
        get { return PrepareBuilder().btDatas_; }
      }
      public int BtDatasCount {
        get { return result.BtDatasCount; }
      }
      public global::BonreePB.BTDataItem GetBtDatas(int index) {
        return result.GetBtDatas(index);
      }
      public Builder SetBtDatas(int index, global::BonreePB.BTDataItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.btDatas_[index] = value;
        return this;
      }
      public Builder SetBtDatas(int index, global::BonreePB.BTDataItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.btDatas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBtDatas(global::BonreePB.BTDataItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.btDatas_.Add(value);
        return this;
      }
      public Builder AddBtDatas(global::BonreePB.BTDataItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.btDatas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBtDatas(scg::IEnumerable<global::BonreePB.BTDataItem> values) {
        PrepareBuilder();
        result.btDatas_.Add(values);
        return this;
      }
      public Builder ClearBtDatas() {
        PrepareBuilder();
        result.btDatas_.Clear();
        return this;
      }
    }
    static BtDatasReq() {
      object.ReferenceEquals(global::BonreePB.PbDataAggregator.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
